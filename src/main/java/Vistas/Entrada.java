/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;
import Componentes.ManejoArchivo;
import Componentes.TablaDistribuciones;
import Componentes.Sistema;
import Componentes.EstadisticasCostos;
import Funciones.Alerta;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author USUARIO
 */
public class Entrada extends javax.swing.JFrame {
    private TablaDistribuciones tablaLlegadasM  = new TablaDistribuciones();
    private TablaDistribuciones tablaLlegadasA  = new TablaDistribuciones();
    private TablaDistribuciones tablaServidoresA  = new TablaDistribuciones();
    private TablaDistribuciones tablaServidoresM  = new TablaDistribuciones();
    private TablaDistribuciones tablaLlegada = new TablaDistribuciones();
    /**
     * Creates new form Entrada
     */
    public Entrada() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Unidad = new javax.swing.JComboBox<>();
        TF_TiempoSimulacion = new javax.swing.JTextField();
        TF_NumServidores = new javax.swing.JTextField();
        TF_NumClientes = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Cargar_Llegada = new javax.swing.JButton();
        Cargar_Servicio = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        TF_CostoTS = new javax.swing.JTextField();
        TF_CostoOcupado = new javax.swing.JTextField();
        TF_CostoDesocupado = new javax.swing.JTextField();
        TF_CostoTW = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        TF_CostoTExtra = new javax.swing.JTextField();
        TF_CostoSisTExtra = new javax.swing.JTextField();
        TF_CostoONormal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Cargar_Datos = new javax.swing.JButton();
        Guardar_Datos = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table_TLLegadas = new javax.swing.JTable();
        Actualizar_TablaLL = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Table_TSalidas = new javax.swing.JTable();
        Actualizar_TablaS = new javax.swing.JButton();
        Quitar_FilaTll = new javax.swing.JButton();
        Agregar_FilaTll = new javax.swing.JButton();
        Quitar_FilaTS = new javax.swing.JButton();
        Agregar_FilaTS = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setText("ENTRADA");

        jLabel2.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel2.setText("Costos:");

        jLabel4.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel4.setText("Cantidad de tiempo a simular:");

        jLabel5.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel5.setText("Max de clientes permitidos: ");

        jLabel6.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel6.setText("Cantidad de servidores:");

        jLabel7.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel7.setText("Tabla de distribuciones:");

        jLabel8.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel8.setText("Unidad de tiempo:");

        Unidad.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        Unidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Segundos", "Minutos", "Horas", "Dias", "Semanas", "Meses", " " }));

        TF_TiempoSimulacion.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_TiempoSimulacion.setText("0");
        TF_TiempoSimulacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        TF_NumServidores.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_NumServidores.setText("0");
        TF_NumServidores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        TF_NumClientes.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_NumClientes.setText("0");
        TF_NumClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel9.setText("Tiempo de llegada:");

        jLabel10.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel10.setText("Tiempo de servicio:");

        jButton1.setText("Empezar simulacion");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Click_EmpezarSimulacion(evt);
            }
        });

        Cargar_Llegada.setLabel("Cargar");
        Cargar_Llegada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CargarArchivoLLegada(evt);
            }
        });

        Cargar_Servicio.setText("Cargar");
        Cargar_Servicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarArchivoServicio(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel11.setText("Tiempo de servicio: ");

        jLabel12.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel12.setText("Servidor ocupado:");

        jLabel13.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel13.setText("Servidor desocupado:");

        jLabel14.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel14.setText("Tiempo de espera:");

        TF_CostoTS.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_CostoTS.setText("0");
        TF_CostoTS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        TF_CostoOcupado.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_CostoOcupado.setText("0");
        TF_CostoOcupado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        TF_CostoDesocupado.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_CostoDesocupado.setText("0");
        TF_CostoDesocupado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        TF_CostoTW.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_CostoTW.setText("0");
        TF_CostoTW.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel15.setText("Servidor en tiempo extra:");

        jLabel16.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel16.setText("Sistema en tiempo extra:");

        jLabel17.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel17.setText("Sistema en operacion normal:");

        TF_CostoTExtra.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_CostoTExtra.setText("0");
        TF_CostoTExtra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        TF_CostoSisTExtra.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_CostoSisTExtra.setText("0");
        TF_CostoSisTExtra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        TF_CostoONormal.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        TF_CostoONormal.setText("0");
        TF_CostoONormal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkisNumber(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 2, 14)); // NOI18N
        jLabel3.setText("Ingrese los datos solicitados a continuacion: ");

        Cargar_Datos.setText("Cargar");
        Cargar_Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cargar_ArchivoDatos(evt);
            }
        });

        Guardar_Datos.setText("Guardar");
        Guardar_Datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardar_ArchivoEntrada(evt);
            }
        });

        Table_TLLegadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Valor", "Porcentaje", "P.Acumulado", "Rango"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(Table_TLLegadas);

        Actualizar_TablaLL.setText("Actualizar");
        Actualizar_TablaLL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Actualizar_TablaLLDis(evt);
            }
        });

        Table_TSalidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Valor", "Porcentaje", "P.Acumulado", "Rango"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(Table_TSalidas);

        Actualizar_TablaS.setText("Actualizar");
        Actualizar_TablaS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Actualizar_TablaSDis(evt);
            }
        });

        Quitar_FilaTll.setText("Quitar");
        Quitar_FilaTll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quitarFilaTll(evt);
            }
        });

        Agregar_FilaTll.setText("Agregar");
        Agregar_FilaTll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregarFilaTll(evt);
            }
        });

        Quitar_FilaTS.setText("Quitar");
        Quitar_FilaTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quitarFilaTS(evt);
            }
        });

        Agregar_FilaTS.setText("Agregar");
        Agregar_FilaTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agregarFilaTS(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TF_TiempoSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(113, 113, 113)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel14)
                                                    .addComponent(jLabel12))
                                                .addGap(21, 21, 21)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(TF_CostoTW, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(TF_CostoTS, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(TF_CostoOcupado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(99, 99, 99)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel17)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                                        .addComponent(TF_CostoONormal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel15)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(TF_CostoTExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel16)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(TF_CostoSisTExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(TF_CostoDesocupado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TF_NumClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TF_NumServidores, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabel1))
                        .addContainerGap(58, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(354, 354, 354))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cargar_Llegada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Actualizar_TablaLL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Quitar_FilaTll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Agregar_FilaTll)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Cargar_Servicio)
                        .addGap(18, 18, 18)
                        .addComponent(Actualizar_TablaS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Quitar_FilaTS)
                        .addGap(18, 18, 18)
                        .addComponent(Agregar_FilaTS))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(Cargar_Datos)
                        .addGap(18, 18, 18)
                        .addComponent(Guardar_Datos))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jLabel3)
                    .addContainerGap(753, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cargar_Datos)
                    .addComponent(Guardar_Datos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(TF_CostoTS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(TF_CostoTExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TF_TiempoSimulacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(TF_CostoTW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(TF_CostoONormal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TF_NumClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(TF_CostoOcupado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(TF_CostoSisTExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TF_NumServidores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(TF_CostoDesocupado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(Cargar_Llegada)
                    .addComponent(Actualizar_TablaLL)
                    .addComponent(jLabel10)
                    .addComponent(Cargar_Servicio)
                    .addComponent(Actualizar_TablaS)
                    .addComponent(Quitar_FilaTll)
                    .addComponent(Agregar_FilaTll)
                    .addComponent(Quitar_FilaTS)
                    .addComponent(Agregar_FilaTS))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addContainerGap(126, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(64, 64, 64)
                    .addComponent(jLabel3)
                    .addContainerGap(506, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarArchivoLLegada(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CargarArchivoLLegada
        // TODO add your handling code here:
        ManejoArchivo M=new ManejoArchivo();
        M.leerArchivoLlegadas();
        this.tablaLlegadasA=M.getTablaLlegadas();
    
        DefaultTableModel model =(DefaultTableModel) this.Table_TLLegadas.getModel();
        model.setRowCount(0);
        for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++){
       
           Object[] fila = {this.tablaLlegadasA.getTabla().get(i).getTiempo(),
                           this.tablaLlegadasA.getTabla().get(i).getProbabilidad(), 
                           this.tablaLlegadasA.getTabla().get(i).getProbabilidadAcumulada(),
                           "("+this.tablaLlegadasA.getTabla().get(i).getValorMin()+","+this.tablaLlegadasA.getTabla().get(i).getValorMax()+")"};
           
           model.addRow(fila);
        }
      
        
    }//GEN-LAST:event_CargarArchivoLLegada

    private void cargarArchivoServicio(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarArchivoServicio
        // TODO add your handling code here:
        ManejoArchivo M=new ManejoArchivo();
        M.leerArchivoServicios(0);
        this.tablaServidoresA=M.getTablaServicio();
      
        DefaultTableModel model =(DefaultTableModel) this.Table_TSalidas.getModel();
        model.setRowCount(0);
        for(int i=0;i<this.tablaServidoresA.getTabla().size();i++){
       
           Object[] fila = {this.tablaServidoresA.getTabla().get(i).getTiempo(),
                           this.tablaServidoresA.getTabla().get(i).getProbabilidad(), 
                           this.tablaServidoresA.getTabla().get(i).getProbabilidadAcumulada(),
                           "("+this.tablaServidoresA.getTabla().get(i).getValorMin()+","+this.tablaServidoresA.getTabla().get(i).getValorMax()+")"};
           
           model.addRow(fila);
        }
      
     
    }//GEN-LAST:event_cargarArchivoServicio

    private void checkisNumber(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkisNumber
        // TODO add your handling code here:
        char c=evt.getKeyChar();
       
        if(Character.isDigit(c)==false){
           System.out.println(c); 
           evt.consume();
        }
    }//GEN-LAST:event_checkisNumber

    private void Click_EmpezarSimulacion(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Click_EmpezarSimulacion
        // TODO add your handling code here:
        String unidad=this.Unidad.getItemAt(this.Unidad.getSelectedIndex());
        int TM=Integer.parseInt(this.TF_TiempoSimulacion.getText());
        int Max_C=Integer.parseInt(this.TF_NumClientes.getText());
        int Cant_S=Integer.parseInt(this.TF_NumServidores.getText());
        int costo_TS=Integer.parseInt(this.TF_CostoTS.getText());
        int costo_TW=Integer.parseInt(this.TF_CostoTW.getText());
        int costo_Ocupado=Integer.parseInt(this.TF_CostoOcupado.getText());
        int costo_Desocupado=Integer.parseInt(this.TF_CostoDesocupado.getText());
        int costo_TiempoExtra=Integer.parseInt(this.TF_CostoTExtra.getText());
        int costo_OpNormal=Integer.parseInt(this.TF_CostoONormal.getText());
        int costo_SisTiempoExtra=Integer.parseInt(this.TF_CostoSisTExtra.getText());
        EstadisticasCostos EC=new EstadisticasCostos(TM,Max_C,Cant_S,costo_TS,costo_TW,costo_Ocupado,costo_Desocupado,costo_TiempoExtra,costo_OpNormal,costo_SisTiempoExtra,unidad);
        Sistema simulacion=new Sistema(TM,Max_C,Cant_S,this.tablaLlegadasA,this.tablaServidoresA,EC);
        simulacion.ComenzarSimulacion();
    
    }//GEN-LAST:event_Click_EmpezarSimulacion

    private void Cargar_ArchivoDatos(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cargar_ArchivoDatos
        // TODO add your handling code here:
         ManejoArchivo M=new ManejoArchivo();
         M.leerArchivoTm();
         this.TF_TiempoSimulacion.setText(Integer.toString(M.tm));
         M.leerArchivoMaxC();
         System.out.println(M.MaxC);
         this.TF_NumClientes.setText(Integer.toString(M.MaxC));
         M.leerArchivoMaxS();
         this.TF_NumServidores.setText(Integer.toString(M.MaxS));
         M.leerArchivoCostoTS();
         this.TF_CostoTS.setText(Integer.toString(M.CostoTS));
         M.leerArchivoCostoTW();
         this.TF_CostoTW.setText(Integer.toString(M.CostoTW));
         M.leerArchivoCostoSO();
         this.TF_CostoOcupado.setText(Integer.toString(M.CostoSO));
         M.leerArchivoCostoSDO();
         this.TF_CostoDesocupado.setText(Integer.toString(M.CostoSDO));
         M.leerArchivoCostoTExtra();
         this.TF_CostoTExtra.setText(Integer.toString(M.CostoTExtra));
         M.leerArchivoCostoOPNormal();
         this.TF_CostoONormal.setText(Integer.toString(M.CostoOPNormal));
         M.leerArchivoCostoSisExtra();
         this.TF_CostoSisTExtra.setText(Integer.toString(M.CostoSisExtra));
         
    }//GEN-LAST:event_Cargar_ArchivoDatos
    private String escribirTablaTLL(){
       String a=""; 
       for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++){
         a=a+this.tablaLlegadasA.getTabla().get(i).getTiempo()+" "+this.tablaLlegadasA.getTabla().get(i).getProbabilidad()+" \n";
       }
       return a;
    }
    
    private String escribirTablaTS(){
       String a=""; 
       for(int i=0;i<this.tablaServidoresA.getTabla().size();i++){
         a=a+this.tablaServidoresA.getTabla().get(i).getTiempo()+" "+this.tablaServidoresA.getTabla().get(i).getProbabilidad()+" \n";
       }
       return a;
    }
    private void guardar_ArchivoEntrada(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardar_ArchivoEntrada
        // TODO add your handling code here:
        ManejoArchivo M=new ManejoArchivo();
        M.guardarArchivo(
          "Tm\n"
          +this.TF_TiempoSimulacion.getText()+"\n"
          +"MaxC\n"
          +this.TF_NumClientes.getText()+"\n"
          +"MaxS\n"
          +this.TF_NumServidores.getText()+"\n"        
          +"CostoTS\n"
          +this.TF_CostoTS.getText()+"\n"
          +"CostoTW\n"
          +this.TF_CostoTW.getText()+"\n"
          +"CostoSO\n"
          +this.TF_CostoOcupado.getText()+"\n"
          +"CostoSDO\n"
          +this.TF_CostoDesocupado.getText()+"\n"
          +"CostoTExtra\n"
          +this.TF_CostoTExtra.getText()+"\n"
          +"CostoOPNormal\n"
          +this.TF_CostoONormal.getText()+"\n"
          +"CostoSisExtra\n"
          +this.TF_CostoSisTExtra.getText()+"\n"  
          +"Tiempos entre Llegadas\n"
          +escribirTablaTLL()        
          +"Tiempos de Servicio\n"
          +escribirTablaTS()      
        );
    }//GEN-LAST:event_guardar_ArchivoEntrada

    private void Actualizar_TablaLLDis(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Actualizar_TablaLLDis
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.Table_TLLegadas.getModel();
        Double pAcum=0.0;
        for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++)
            pAcum=pAcum+(Double) this.Table_TLLegadas.getValueAt(i,1);
        if(pAcum<=100){
            for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++){
                 System.out.println(this.Table_TLLegadas.getValueAt(i,0)+" / "+this.Table_TLLegadas.getValueAt(i,1));
                 int t=(Integer )this.Table_TLLegadas.getValueAt(i,0);
                 Double p=(Double) this.Table_TLLegadas.getValueAt(i,1);
                 this.tablaLlegadasA.setTiempo(i, t,p);
            }
            this.tablaLlegadasA.resetTabla();
            this.tablaLlegadasA.generarTabla();
            model.setRowCount(0);

            for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++){
                   Object[] fila = {this.tablaLlegadasA.getTabla().get(i).getTiempo(),
                               this.tablaLlegadasA.getTabla().get(i).getProbabilidad(), 
                               this.tablaLlegadasA.getTabla().get(i).getProbabilidadAcumulada(),
                               "("+this.tablaLlegadasA.getTabla().get(i).getValorMin()+","+this.tablaLlegadasA.getTabla().get(i).getValorMax()+")"};

                 model.addRow(fila);
            }
        }
        else{
          model.setRowCount(0);  
          for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++){
                   Object[] fila = {this.tablaLlegadasA.getTabla().get(i).getTiempo(),
                               this.tablaLlegadasA.getTabla().get(i).getProbabilidad(), 
                               this.tablaLlegadasA.getTabla().get(i).getProbabilidadAcumulada(),
                               "("+this.tablaLlegadasA.getTabla().get(i).getValorMin()+","+this.tablaLlegadasA.getTabla().get(i).getValorMax()+")"};

                 model.addRow(fila);
            }
          Alerta.mensajeError("La probabilidad acumulada ha llegado al 100% ");
        }  
        
    }//GEN-LAST:event_Actualizar_TablaLLDis

    private void Actualizar_TablaSDis(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Actualizar_TablaSDis
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.Table_TSalidas.getModel();
        Double pAcum=0.0;
        for(int i=0;i<this.tablaServidoresA.getTabla().size();i++)
            pAcum=pAcum+(Double) this.Table_TSalidas.getValueAt(i,1);
        if(pAcum<=100){
        
            for(int i=0;i<this.tablaServidoresA.getTabla().size();i++){
                 System.out.println(this.Table_TSalidas.getValueAt(i,0)+" / "+this.Table_TSalidas.getValueAt(i,1));
                 int t=(Integer )this.Table_TSalidas.getValueAt(i,0);
                 Double p=(Double) this.Table_TSalidas.getValueAt(i,1);
                 this.tablaServidoresA.setTiempo(i, t,p);
            }
            this.tablaServidoresA.resetTabla();
            this.tablaServidoresA.generarTabla();
            model.setRowCount(0);

            for(int i=0;i<this.tablaServidoresA.getTabla().size();i++){
                   Object[] fila = {this.tablaServidoresA.getTabla().get(i).getTiempo(),
                               this.tablaServidoresA.getTabla().get(i).getProbabilidad(), 
                               this.tablaServidoresA.getTabla().get(i).getProbabilidadAcumulada(),
                               "("+this.tablaServidoresA.getTabla().get(i).getValorMin()+","+this.tablaServidoresA.getTabla().get(i).getValorMax()+")"};

                 model.addRow(fila);
            }
        }
    }//GEN-LAST:event_Actualizar_TablaSDis

    private void quitarFilaTll(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quitarFilaTll
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.Table_TLLegadas.getModel();
        model.setRowCount(model.getRowCount()-1);
        this.tablaLlegadasA.removeTiempo();
        for(int i=0;i<model.getRowCount();i++){
             System.out.println(this.Table_TLLegadas.getValueAt(i,0)+" / "+this.Table_TLLegadas.getValueAt(i,1));
             int t=(Integer )this.Table_TLLegadas.getValueAt(i,0);
             Double p=(Double) this.Table_TLLegadas.getValueAt(i,1);
             this.tablaLlegadasA.setTiempo(i, t,p);
        }
        this.tablaLlegadasA.resetTabla();
        this.tablaLlegadasA.generarTabla();
        model.setRowCount(0);
      
        for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++){
               Object[] fila = {this.tablaLlegadasA.getTabla().get(i).getTiempo(),
                           this.tablaLlegadasA.getTabla().get(i).getProbabilidad(), 
                           this.tablaLlegadasA.getTabla().get(i).getProbabilidadAcumulada(),
                           "("+this.tablaLlegadasA.getTabla().get(i).getValorMin()+","+this.tablaLlegadasA.getTabla().get(i).getValorMax()+")"};
           
             model.addRow(fila);
        }
    }//GEN-LAST:event_quitarFilaTll

    private void agregarFilaTll(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarFilaTll
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.Table_TLLegadas.getModel();
        this.tablaLlegadasA.addTiempo(1,5);
        if(this.tablaLlegadasA.getProAcum()<100){ 
            this.tablaLlegadasA.resetTabla();
            this.tablaLlegadasA.generarTabla();
            model.setRowCount(0);

            for(int i=0;i<this.tablaLlegadasA.getTabla().size();i++){
                   Object[] fila = {this.tablaLlegadasA.getTabla().get(i).getTiempo(),
                               this.tablaLlegadasA.getTabla().get(i).getProbabilidad(), 
                               this.tablaLlegadasA.getTabla().get(i).getProbabilidadAcumulada(),
                               "("+this.tablaLlegadasA.getTabla().get(i).getValorMin()+","+this.tablaLlegadasA.getTabla().get(i).getValorMax()+")"};

                 model.addRow(fila);
            }
        }
    }//GEN-LAST:event_agregarFilaTll

    private void quitarFilaTS(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quitarFilaTS
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.Table_TSalidas.getModel();
        model.setRowCount(model.getRowCount()-1);
        this.tablaServidoresA.removeTiempo();
        for(int i=0;i<model.getRowCount();i++){
             System.out.println(this.Table_TSalidas.getValueAt(i,0)+" / "+this.Table_TSalidas.getValueAt(i,1));
             int t=(Integer )this.Table_TSalidas.getValueAt(i,0);
             Double p=(Double) this.Table_TSalidas.getValueAt(i,1);
             this.tablaLlegadasA.setTiempo(i, t,p);
        }
        this.tablaLlegadasA.resetTabla();
        this.tablaLlegadasA.generarTabla();
        model.setRowCount(0);
      
        for(int i=0;i<this.tablaServidoresA.getTabla().size();i++){
               Object[] fila = {this.tablaServidoresA.getTabla().get(i).getTiempo(),
                           this.tablaServidoresA.getTabla().get(i).getProbabilidad(), 
                           this.tablaServidoresA.getTabla().get(i).getProbabilidadAcumulada(),
                           "("+this.tablaServidoresA.getTabla().get(i).getValorMin()+","+this.tablaServidoresA.getTabla().get(i).getValorMax()+")"};
           
             model.addRow(fila);
        }
    }//GEN-LAST:event_quitarFilaTS

    private void agregarFilaTS(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregarFilaTS
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.Table_TSalidas.getModel();
        this.tablaServidoresA.addTiempo(1,5);
        if(this.tablaServidoresA.getProAcum()<100){ 
            this.tablaServidoresA.resetTabla();
            this.tablaServidoresA.generarTabla();
            model.setRowCount(0);

            for(int i=0;i<this.tablaServidoresA.getTabla().size();i++){
                   Object[] fila = {this.tablaServidoresA.getTabla().get(i).getTiempo(),
                               this.tablaServidoresA.getTabla().get(i).getProbabilidad(), 
                               this.tablaServidoresA.getTabla().get(i).getProbabilidadAcumulada(),
                               "("+this.tablaServidoresA.getTabla().get(i).getValorMin()+","+this.tablaServidoresA.getTabla().get(i).getValorMax()+")"};

                 model.addRow(fila);
            }
        }
    }//GEN-LAST:event_agregarFilaTS

    /**
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entrada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar_TablaLL;
    private javax.swing.JButton Actualizar_TablaS;
    private javax.swing.JButton Agregar_FilaTS;
    private javax.swing.JButton Agregar_FilaTll;
    private javax.swing.JButton Cargar_Datos;
    private javax.swing.JButton Cargar_Llegada;
    private javax.swing.JButton Cargar_Servicio;
    private javax.swing.JButton Guardar_Datos;
    private javax.swing.JButton Quitar_FilaTS;
    private javax.swing.JButton Quitar_FilaTll;
    private javax.swing.JTextField TF_CostoDesocupado;
    private javax.swing.JTextField TF_CostoONormal;
    private javax.swing.JTextField TF_CostoOcupado;
    private javax.swing.JTextField TF_CostoSisTExtra;
    private javax.swing.JTextField TF_CostoTExtra;
    private javax.swing.JTextField TF_CostoTS;
    private javax.swing.JTextField TF_CostoTW;
    private javax.swing.JTextField TF_NumClientes;
    private javax.swing.JTextField TF_NumServidores;
    private javax.swing.JTextField TF_TiempoSimulacion;
    private javax.swing.JTable Table_TLLegadas;
    private javax.swing.JTable Table_TSalidas;
    private javax.swing.JComboBox<String> Unidad;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
